apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${_KSA_NAME}
  namespace: ${_NAMESPACE}
  annotations:
    iam.gke.io/gcp-service-account: ${_IAM_SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: ${_NAMESPACE}
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    http {
      server {
        listen 8080;
        
        # Enable localhost redirects
        server_name localhost 127.0.0.1;
        
        # Serve the main app files
        location / {
          root /usr/share/nginx/html;
          index index.html;
          sub_filter 'http://localhost:8501' '';
          sub_filter 'http://127.0.0.1:6080' '';
          sub_filter_once off;
          sub_filter_types *;
        }
        
        # Handle direct localhost:8501 access
        location = /8501 {
          return 302 $scheme://$host:8080/streamlit/;
        }
        
        # Handle direct localhost:6080 access
        location = /6080 {
          return 302 $scheme://$host:8080/vnc/;
        }
        
        # Proxy for Streamlit
        location /streamlit/ {
          proxy_pass http://127.0.0.1:8501/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_read_timeout 86400;
        }
        
        # Rewrite localhost:8501 to /streamlit/
        location ~ ^http://localhost:8501/(.*)$ {
          return 302 $scheme://$host:8080/streamlit/$1;
        }
        
        # Proxy for noVNC
        location /vnc/ {
          proxy_pass http://127.0.0.1:6080/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_read_timeout 86400;
        }
        
        # Rewrite localhost:6080 to /vnc/
        location ~ ^http://127.0.0.1:6080/(.*)$ {
          return 302 $scheme://$host:8080/vnc/$1;
        }

        # Proxy for main app
        location /app/ {
          proxy_pass http://127.0.0.1:8088/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_read_timeout 86400;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${_IMAGE_NAME}
  namespace: ${_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${_IMAGE_NAME}
  template:
    metadata:
      labels:
        app: ${_IMAGE_NAME}
    spec:
      serviceAccountName: ${_KSA_NAME}
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
      containers:
      - name: nginx-proxy
        image: nginx:alpine
        ports:
          - containerPort: 8080
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
      - name: ${_IMAGE_NAME}
        image: ${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_ID}/${_IMAGE_NAME}:${_IMAGE_TAG}
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        env:
        - name: API_PROVIDER
          value: "vertex"
        - name: CLOUD_ML_REGION
          value: "${_REGION}"
        - name: ANTHROPIC_VERTEX_PROJECT_ID
          value: "${PROJECT_ID}"
        - name: WIDTH
          value: "1024"
        - name: HEIGHT
          value: "768"
        - name: VNC_PORT
          value: "5900"
        - name: NOVNC_PORT
          value: "6080"
        - name: WEBSOCKIFY_OPTIONS
          value: "--web /opt/noVNC --cert=/opt/noVNC/self.pem"
        - name: HTTP_SERVER_PORT
          value: "8088"
        ports:
        - containerPort: 5900
          name: vnc
        - containerPort: 8501
          name: streamlit
        - containerPort: 6080
          name: novnc
        - containerPort: 8088
          name: web
        readinessProbe:
          tcpSocket:
            port: streamlit
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        livenessProbe:
          tcpSocket:
            port: web
          initialDelaySeconds: 120
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 6
---
apiVersion: v1
kind: Service
metadata:
  name: ${_IMAGE_NAME}
  namespace: ${_NAMESPACE}
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
    name: web
  selector:
    app: ${_IMAGE_NAME}